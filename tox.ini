[tox]
min_version = 0.0.1min_version = 4.0.0
envlist = fix_lint,
          py{37,38,39,310},
          coverage
skip_missing_interpreters = true

[testenv]
package = external
description = run the tests with pytest under {basepython}
extras =
    development
    pandas
external_wheels =
    py37-ci: dist/*.whl
    py38-ci: dist/*.whl
    py39-ci: dist/.whl
    py310-ci: dist/.whl
deps = pip


setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    SQLALCHEMY_WARN_20 = 1

commands = pytest \
           --cov "vertica.vertica_python" \
           --junitxml {toxworkdir}/junit_{envname}.xml \
           {posargs:tests}
           pytest \
           --cov "vertica.vertica_python" --cov-append \
           --junitxml {toxworkdir}/junit_{envname}.xml \
           {posargs:test/vertica_sqlalchemy_test_suite}



[testenv:.pkg_external]
deps = build
package_glob = {toxinidir}{/}dist{/}*.whl
commands =
    pyproject-build -w . -o {toxinidir}{/}dist

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/main (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage
       ;diff_cover
skip_install = True
passenv = DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           ;diff-cover --compare-branch {env:DIFF_AGAINST:origin/main} {toxworkdir}/coverage.xml
depends = py37, py38, py39, py310

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv =
    PROGRAMDATA
deps =
    {[testenv]deps}
    pre-commit >= 2.9.0
skip_install = True
commands = pre-commit run --all-files
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[pytest]
#--ignore=test/test_integration.py add this if you wnat to ignore
addopts = -ra --strict-markers --ignore=test/test_integration.py 
junit_family = legacy
log_level = info


[coverage:report]
skip_covered = False
show_missing = True

[coverage:run]
branch = true
parallel = true

[coverage:paths]
source =
    */vertica_sqlalchemy_dialect
    *\vertica_sqlalchemy_dialect